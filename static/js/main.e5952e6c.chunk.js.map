{"version":3,"sources":["assets/bitpoll.png","assets/monikers.png","assets/ideabox.png","assets/hmmchase.png","assets/palette-picker.png","components/Profile/Profile.js","components/Project/Project.js","components/ProjectContainer/ProjectContainer.js","components/App/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Profile","className","href","icon","React","memo","props","title","src","img","alt","desc","links","map","link","i","key","name","gitUrl","target","rel","liveUrl","ProjectContainer","ideabox","bitpoll","monikers","palettePicker","hmmchase","library","add","fas","fab","App","flip","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,oPC4D5BC,G,MAxDC,kBACd,6BACE,6CAEA,yBAAKC,UAAU,UACb,yBAAKA,UAAU,eACb,0BAAMA,UAAU,SAAhB,cACA,0BAAMA,UAAU,SAAhB,UACA,0BAAMA,UAAU,SAAhB,QACA,0BAAMA,UAAU,SAAhB,YACA,0BAAMA,UAAU,SAAhB,OACA,0BAAMA,UAAU,SAAhB,SACA,0BAAMA,UAAU,SAAhB,UACA,0BAAMA,UAAU,SAAhB,SAEA,uBAAGA,UAAU,gBAAgBC,KAAK,+BAChC,kBAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,cAInC,wBAAIF,UAAU,UAEd,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,SAAhB,UACA,0BAAMA,UAAU,SAAhB,WACA,0BAAMA,UAAU,SAAhB,WACA,0BAAMA,UAAU,SAAhB,YACA,0BAAMA,UAAU,SAAhB,SACA,0BAAMA,UAAU,SAAhB,QACA,0BAAMA,UAAU,SAAhB,QACA,0BAAMA,UAAU,SAAhB,UAEA,uBACEA,UAAU,gBACVC,KAAK,wCAEL,kBAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,oB,kFCA1BC,G,MAAAA,IAAMC,MArCL,SAAAC,GAAK,OACnB,6BAASL,UAAU,WACjB,wBAAIA,UAAU,iBAAiBK,EAAMC,OAErC,yBAAKN,UAAU,cAAcO,IAAKF,EAAMG,IAAKC,IAAI,eAEjD,uBAAGT,UAAU,uBAAuBK,EAAMK,MAE1C,yBAAKV,UAAU,0BACZK,EAAMM,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACf,yBAAKC,IAAKD,GACPD,EAAKG,MAAQ,uBAAGhB,UAAU,qBAAqBa,EAAKG,MACrD,yBAAKhB,UAAU,iBACb,uBACEA,UAAU,eACVC,KAAMY,EAAKI,OACXC,OAAO,SACPC,IAAI,uBAJN,UASA,uBACEnB,UAAU,eACVC,KAAMY,EAAKO,QACXF,OAAO,SACPC,IAAI,uBAJN,wBCgEGE,G,MAhFU,kBACvB,yBAAKrB,UAAU,qBACb,kBAAC,EAAD,CACEM,MAAM,UACNE,IAAKc,IACLZ,KAAK,wGACLC,MAAO,CACL,CACEK,KAAM,iBACNC,OAAQ,yCACRG,QAAS,0CAEX,CACEJ,KAAM,sBACNC,OAAQ,yCACRG,QAAS,2CAEX,CACEJ,KAAM,0BACNC,OAAQ,yCACRG,QAAS,uCAEX,CACEJ,KAAM,yBACNC,OAAQ,yCACRG,QAAS,0CAKf,kBAAC,EAAD,CACEd,MAAM,UACNE,IAAKe,IACLb,KAAK,iJACLC,MAAO,CACL,CACEM,OAAQ,sCACRG,QAAS,sCAKf,kBAAC,EAAD,CACEd,MAAM,WACNE,IAAKgB,IACLd,KAAK,8CACLC,MAAO,CACL,CACEM,OAAQ,uCACRG,QAAS,qCAKf,kBAAC,EAAD,CACEd,MAAM,iBACNE,IAAKiB,IACLf,KAAK,wFACLC,MAAO,CACL,CACEM,OAAQ,6CACRG,QAAS,gDAKf,kBAAC,EAAD,CACEd,MAAM,eACNE,IAAKkB,IACLhB,KAAK,gBACLC,MAAO,CACL,CACEM,OAAQ,uCACRG,QAAS,qD,MCzEnBO,IAAQC,IAAIC,IAAKC,KAEjB,IAiCeC,EAjCH,kBACV,0BAAM/B,UAAU,OACd,6BAASA,UAAU,QACjB,yBAAKA,UAAU,SACb,yBAAKA,UAAU,QACb,6CAGF,kBAAC,EAAD,OAGF,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CACEA,UAAU,YACVE,KAAM,CAAC,MAAO,kBACd8B,KAAK,eAGP,0CAEA,kBAAC,IAAD,CACEhC,UAAU,YACVE,KAAM,CAAC,MAAO,sBAKpB,6BAASF,UAAU,SACjB,kBAAC,EAAD,SC7BAiC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,MCzEjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBlB,UAAW,CAGzE,GADkB,IAAImB,IAAIC,GAAwB1B,OAAOC,UAC3C0B,SAAW3B,OAAOC,SAAS0B,OAIvC,OAGF3B,OAAO4B,iBAAiB,QAAQ,WAC9B,IAAMvB,EAAK,UAAMqB,GAAN,sBAEP5B,IAiDV,SAAiCO,GAE/BwB,MAAMxB,GACHI,MAAK,SAAAqB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAM1B,MAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,MAAK,WAC7BT,OAAOC,SAASoC,eAKpBjC,EAAgBC,MAGnBc,OAAM,WACLF,QAAQC,IACN,oEArEAoB,CAAwBjC,GAIxBC,UAAUC,cAAc4B,MAAM1B,MAAK,WACjCQ,QAAQC,IACN,gHAMJd,EAAgBC,OCzCxBkC,K","file":"static/js/main.e5952e6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bitpoll.4460295e.png\";","module.exports = __webpack_public_path__ + \"static/media/monikers.80e161b6.png\";","module.exports = __webpack_public_path__ + \"static/media/ideabox.0ec5ceec.png\";","module.exports = __webpack_public_path__ + \"static/media/hmmchase.4d84714c.png\";","module.exports = __webpack_public_path__ + \"static/media/palette-picker.b4b8d9c4.png\";","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './Profile.css';\r\n\r\nconst Profile = () => (\r\n  <div>\r\n    <h2>Web Developer</h2>\r\n\r\n    <div className='skills'>\r\n      <div className='skills-left'>\r\n        <span className='skill'>JavaScript</span>\r\n        <span className='skill'>jQuery</span>\r\n        <span className='skill'>HTML</span>\r\n        <span className='skill'>CSS/SCSS</span>\r\n        <span className='skill'>Git</span>\r\n        <span className='skill'>React</span>\r\n        <span className='skill'>Router</span>\r\n        <span className='skill'>Redux</span>\r\n\r\n        <a className='platform-icon' href='https://github.com/hmmChase'>\r\n          <FontAwesomeIcon icon={['fab', 'github']} />\r\n        </a>\r\n      </div>\r\n\r\n      <hr className='split' />\r\n\r\n      <div className='skills-right'>\r\n        <span className='skill'>NextJS</span>\r\n        <span className='skill'>Express</span>\r\n        <span className='skill'>GraphQL</span>\r\n        <span className='skill'>Postgres</span>\r\n        <span className='skill'>Mocha</span>\r\n        <span className='skill'>Chai</span>\r\n        <span className='skill'>Jest</span>\r\n        <span className='skill'>Enzyme</span>\r\n\r\n        <a\r\n          className='platform-icon'\r\n          href='https://www.linkedin.com/in/chase-r/'\r\n        >\r\n          <FontAwesomeIcon icon={['fab', 'linkedin']} />\r\n        </a>\r\n      </div>\r\n    </div>\r\n\r\n    {/* <div className='platforms'>\r\n          <a className='platform-icon' href='https://github.com/hmmChase'>\r\n            <FontAwesomeIcon icon={['fab', 'github']} />\r\n          </a>\r\n\r\n          <a\r\n            className='platform-icon'\r\n            href='https://www.linkedin.com/in/chase-r/'\r\n          >\r\n            <FontAwesomeIcon icon={['fab', 'linkedin']} />\r\n          </a>\r\n        </div> */}\r\n  </div>\r\n);\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport './Project.css';\r\n\r\nconst Project = props => (\r\n  <article className='project'>\r\n    <h3 className='project-title'>{props.title}</h3>\r\n\r\n    <img className='project-img' src={props.img} alt='screenshot' />\r\n\r\n    <p className='project-description'>{props.desc}</p>\r\n\r\n    <div className='project-link-container'>\r\n      {props.links.map((link, i) => (\r\n        <div key={i}>\r\n          {link.name && <p className='project-link-name'>{link.name}</p>}\r\n          <div className='project-links'>\r\n            <a\r\n              className='project-link'\r\n              href={link.gitUrl}\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >\r\n              GitHub\r\n            </a>\r\n\r\n            <a\r\n              className='project-link'\r\n              href={link.liveUrl}\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >\r\n              View Live\r\n            </a>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </article>\r\n);\r\n\r\nexport default React.memo(Project);\r\n","import React from 'react';\r\nimport bitpoll from '../../assets/bitpoll.png';\r\nimport monikers from '../../assets/monikers.png';\r\nimport ideabox from '../../assets/ideabox.png';\r\nimport hmmchase from '../../assets/hmmchase.png';\r\nimport palettePicker from '../../assets/palette-picker.png';\r\nimport Project from '../Project/Project';\r\nimport './ProjectContainer.css';\r\n\r\nconst ProjectContainer = () => (\r\n  <div className='project-container'>\r\n    <Project\r\n      title='IdeaBox'\r\n      img={ideabox}\r\n      desc='IdeaBox is a simple Create, Read, Update, Delete (CRUD) app.  It is implemented three different ways.'\r\n      links={[\r\n        {\r\n          name: 'v1. Vanilla JS',\r\n          gitUrl: 'https://github.com/hmmChase/ideabox-v1',\r\n          liveUrl: 'https://hmmchase.github.io/ideabox-v1/'\r\n        },\r\n        {\r\n          name: 'v2. React / RESTful',\r\n          gitUrl: 'https://github.com/hmmChase/ideabox-v2',\r\n          liveUrl: 'https://ideabox-cra-rest.herokuapp.com/'\r\n        },\r\n        {\r\n          name: 'v3. SSR React / GraphQL',\r\n          gitUrl: 'https://github.com/hmmChase/ideabox-v3',\r\n          liveUrl: 'https://ideabox-v3.hmmchase.now.sh/'\r\n        },\r\n        {\r\n          name: 'v4. v3 + user accounts',\r\n          gitUrl: 'https://github.com/hmmChase/ideabox-v4',\r\n          liveUrl: 'https://ideabox-v4.hmmchase.now.sh/'\r\n        }\r\n      ]}\r\n    />\r\n\r\n    <Project\r\n      title='BitPoll'\r\n      img={bitpoll}\r\n      desc='Bitpoll helps determine consensus within the Bitcoin development community by providing polls restricted to developers of the bitcoin project.'\r\n      links={[\r\n        {\r\n          gitUrl: 'https://github.com/hmmChase/bitpoll',\r\n          liveUrl: 'https://bit-poll.herokuapp.com/'\r\n        }\r\n      ]}\r\n    />\r\n\r\n    <Project\r\n      title='Monikers'\r\n      img={monikers}\r\n      desc='A mobile version of the card game Monikers.'\r\n      links={[\r\n        {\r\n          gitUrl: 'https://github.com/hmmChase/monikers',\r\n          liveUrl: 'https://monikers.herokuapp.com'\r\n        }\r\n      ]}\r\n    />\r\n\r\n    <Project\r\n      title='Palette Picker'\r\n      img={palettePicker}\r\n      desc='Palette Picker allows you to generate color schemes and save them in project folders.'\r\n      links={[\r\n        {\r\n          gitUrl: 'https://github.com/hmmChase/palette-picker',\r\n          liveUrl: 'https://hmm-palette-picker.herokuapp.com/'\r\n        }\r\n      ]}\r\n    />\r\n\r\n    <Project\r\n      title='hmm... Chase'\r\n      img={hmmchase}\r\n      desc='You are here.'\r\n      links={[\r\n        {\r\n          gitUrl: 'https://github.com/hmmChase/hmmChase',\r\n          liveUrl: 'https://www.youtube.com/watch?v=mz6tAJMVmfM'\r\n        }\r\n      ]}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default ProjectContainer;\r\n","import React from 'react';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Profile from '../Profile/Profile';\r\nimport ProjectContainer from '../ProjectContainer/ProjectContainer';\r\nimport './App.css';\r\n\r\nlibrary.add(fas, fab);\r\n\r\nconst App = () => (\r\n  <main className='App'>\r\n    <section className='left'>\r\n      <div className='fixed'>\r\n        <div className='logo'>\r\n          <h1>hmm... Chase</h1>\r\n        </div>\r\n\r\n        <Profile />\r\n      </div>\r\n\r\n      <div className='projects-heading'>\r\n        <FontAwesomeIcon\r\n          className='levelDown'\r\n          icon={['fas', 'level-down-alt']}\r\n          flip='horizontal'\r\n        />\r\n\r\n        <span>projects</span>\r\n\r\n        <FontAwesomeIcon\r\n          className='levelDown'\r\n          icon={['fas', 'level-down-alt']}\r\n        />\r\n      </div>\r\n    </section>\r\n\r\n    <section className='right'>\r\n      <ProjectContainer />\r\n    </section>\r\n  </main>\r\n);\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}